import { Node } from "./node";
export declare const h1: (props?: Object) => (children?: (string | number | Node)[]) => HTMLElement | Text | (string & Element) | (number & Element) | (Node & Element);
export declare const h2: (props?: Object) => (children?: (string | number | Node)[]) => HTMLElement | Text | (string & Element) | (number & Element) | (Node & Element);
export declare const h3: (props?: Object) => (children?: (string | number | Node)[]) => HTMLElement | Text | (string & Element) | (number & Element) | (Node & Element);
export declare const h4: (props?: Object) => (children?: (string | number | Node)[]) => HTMLElement | Text | (string & Element) | (number & Element) | (Node & Element);
export declare const h5: (props?: Object) => (children?: (string | number | Node)[]) => HTMLElement | Text | (string & Element) | (number & Element) | (Node & Element);
export declare const h6: (props?: Object) => (children?: (string | number | Node)[]) => HTMLElement | Text | (string & Element) | (number & Element) | (Node & Element);
export declare const header: (props?: Object) => (children?: (string | number | Node)[]) => HTMLElement | Text | (string & Element) | (number & Element) | (Node & Element);
export declare const footer: (props?: Object) => (children?: (string | number | Node)[]) => HTMLElement | Text | (string & Element) | (number & Element) | (Node & Element);
export declare const main: (props?: Object) => (children?: (string | number | Node)[]) => HTMLElement | Text | (string & Element) | (number & Element) | (Node & Element);
export declare const nav: (props?: Object) => (children?: (string | number | Node)[]) => HTMLElement | Text | (string & Element) | (number & Element) | (Node & Element);
export declare const section: (props?: Object) => (children?: (string | number | Node)[]) => HTMLElement | Text | (string & Element) | (number & Element) | (Node & Element);
export declare const div: (props?: Object) => (children?: (string | number | Node)[]) => HTMLElement | Text | (string & Element) | (number & Element) | (Node & Element);
export declare const li: (props?: Object) => (children?: (string | number | Node)[]) => HTMLElement | Text | (string & Element) | (number & Element) | (Node & Element);
export declare const ol: (props?: Object) => (children?: (string | number | Node)[]) => HTMLElement | Text | (string & Element) | (number & Element) | (Node & Element);
export declare const ul: (props?: Object) => (children?: (string | number | Node)[]) => HTMLElement | Text | (string & Element) | (number & Element) | (Node & Element);
export declare const p: (props?: Object) => (children?: (string | number | Node)[]) => HTMLElement | Text | (string & Element) | (number & Element) | (Node & Element);
export declare const a: (props?: Object) => (children?: (string | number | Node)[]) => HTMLElement | Text | (string & Element) | (number & Element) | (Node & Element);
export declare const b: (props?: Object) => (children?: (string | number | Node)[]) => HTMLElement | Text | (string & Element) | (number & Element) | (Node & Element);
export declare const i: (props?: Object) => (children?: (string | number | Node)[]) => HTMLElement | Text | (string & Element) | (number & Element) | (Node & Element);
export declare const span: (props?: Object) => (children?: (string | number | Node)[]) => HTMLElement | Text | (string & Element) | (number & Element) | (Node & Element);
export declare const img: (props?: Object) => (children?: (string | number | Node)[]) => HTMLElement | Text | (string & Element) | (number & Element) | (Node & Element);
export declare const col: (props?: Object) => (children?: (string | number | Node)[]) => HTMLElement | Text | (string & Element) | (number & Element) | (Node & Element);
export declare const colgroup: (props?: Object) => (children?: (string | number | Node)[]) => HTMLElement | Text | (string & Element) | (number & Element) | (Node & Element);
export declare const td: (props?: Object) => (children?: (string | number | Node)[]) => HTMLElement | Text | (string & Element) | (number & Element) | (Node & Element);
export declare const th: (props?: Object) => (children?: (string | number | Node)[]) => HTMLElement | Text | (string & Element) | (number & Element) | (Node & Element);
export declare const thead: (props?: Object) => (children?: (string | number | Node)[]) => HTMLElement | Text | (string & Element) | (number & Element) | (Node & Element);
export declare const table: (props?: Object) => (children?: (string | number | Node)[]) => HTMLElement | Text | (string & Element) | (number & Element) | (Node & Element);
export declare const tr: (props?: Object) => (children?: (string | number | Node)[]) => HTMLElement | Text | (string & Element) | (number & Element) | (Node & Element);
export declare const button: (props?: Object) => (children?: (string | number | Node)[]) => HTMLElement | Text | (string & Element) | (number & Element) | (Node & Element);
export declare const input: (props?: Object) => (children?: (string | number | Node)[]) => HTMLElement | Text | (string & Element) | (number & Element) | (Node & Element);
export declare const form: (props?: Object) => (children?: (string | number | Node)[]) => HTMLElement | Text | (string & Element) | (number & Element) | (Node & Element);
export declare const label: (props?: Object) => (children?: (string | number | Node)[]) => HTMLElement | Text | (string & Element) | (number & Element) | (Node & Element);
export declare const select: (props?: Object) => (children?: (string | number | Node)[]) => HTMLElement | Text | (string & Element) | (number & Element) | (Node & Element);
export declare const textarea: (props?: Object) => (children?: (string | number | Node)[]) => HTMLElement | Text | (string & Element) | (number & Element) | (Node & Element);
export declare const option: (props?: Object) => (children?: (string | number | Node)[]) => HTMLElement | Text | (string & Element) | (number & Element) | (Node & Element);
export declare const canvas: (props?: Object) => (children?: (string | number | Node)[]) => HTMLElement | Text | (string & Element) | (number & Element) | (Node & Element);
